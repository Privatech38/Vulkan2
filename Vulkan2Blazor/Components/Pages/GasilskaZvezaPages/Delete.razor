@page "/gasilskazvezas/delete"
@using Microsoft.EntityFrameworkCore
@using Vulkan2Blazor.Models
@inject IDbContextFactory<Vulkan2Blazor.Data.Vulkan2Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>GasilskaZveza</h2>
    <hr />
    @if (gasilskazveza is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Naziv</dt>
            <dd class="col-sm-10">@gasilskazveza.Naziv</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Naslov</dt>
            <dd class="col-sm-10">@gasilskazveza.Naslov</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Posta</dt>
            <dd class="col-sm-10">@gasilskazveza.Posta</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Kraj</dt>
            <dd class="col-sm-10">@gasilskazveza.Kraj</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@gasilskazveza.Email</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Telefon</dt>
            <dd class="col-sm-10">@gasilskazveza.Telefon</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">SpletnaStran</dt>
            <dd class="col-sm-10">@gasilskazveza.SpletnaStran</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">MaticnaStevilka</dt>
            <dd class="col-sm-10">@gasilskazveza.MaticnaStevilka</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DavcnaStevilka</dt>
            <dd class="col-sm-10">@gasilskazveza.DavcnaStevilka</dd>
        </dl>
        <EditForm method="post" Model="gasilskazveza" OnValidSubmit="DeleteGasilskaZveza" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(gasilskazveza is null)">Delete</button> |
            <a href="/gasilskazvezas">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private GasilskaZveza? gasilskazveza;

    [SupplyParameterFromQuery]
    private int GasilskaZvezaId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        gasilskazveza = await context.GasilskaZveza.FirstOrDefaultAsync(m => m.GasilskaZvezaId == GasilskaZvezaId);

        if (gasilskazveza is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteGasilskaZveza()
    {
        using var context = DbFactory.CreateDbContext();
        context.GasilskaZveza.Remove(gasilskazveza!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/gasilskazvezas");
    }
}
