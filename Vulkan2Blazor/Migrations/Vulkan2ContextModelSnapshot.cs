// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Vulkan2Blazor.Data;

#nullable disable

namespace Vulkan2Blazor.Migrations
{
    [DbContext(typeof(Vulkan2Context))]
    partial class Vulkan2ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Vulkan2Blazor.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<int?>("ClanId")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("ClanId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Vulkan2Blazor.Models.Cin", b =>
                {
                    b.Property<int>("CinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CinId"));

                    b.Property<int>("CinType")
                        .HasColumnType("integer");

                    b.Property<int>("ClanId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("OdDatum")
                        .HasColumnType("date");

                    b.HasKey("CinId");

                    b.HasIndex("ClanId");

                    b.ToTable("Cin");
                });

            modelBuilder.Entity("Vulkan2Blazor.Models.Clan", b =>
                {
                    b.Property<int>("ClanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClanId"));

                    b.Property<DateOnly>("DatumRojstva")
                        .HasColumnType("date");

                    b.Property<string>("DavcnaStevilka")
                        .HasColumnType("text");

                    b.Property<string>("EMSO")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("GasilskoDrustvoId")
                        .HasColumnType("integer");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Kraj")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Posta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Priimek")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Spol")
                        .HasColumnType("integer");

                    b.Property<string>("Telefon")
                        .HasColumnType("text");

                    b.HasKey("ClanId");

                    b.HasIndex("GasilskoDrustvoId");

                    b.ToTable("Clan");
                });

            modelBuilder.Entity("Vulkan2Blazor.Models.ClanAttributes.Delo", b =>
                {
                    b.Property<int>("DeloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DeloId"));

                    b.Property<int>("ClanId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("Datum")
                        .HasColumnType("date");

                    b.Property<float>("SteviloUr")
                        .HasColumnType("real");

                    b.Property<string>("VrstaDela")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DeloId");

                    b.HasIndex("ClanId");

                    b.ToTable("Delo");
                });

            modelBuilder.Entity("Vulkan2Blazor.Models.ClanAttributes.ZdravstveniPregled", b =>
                {
                    b.Property<int>("ZdravstveniPregledId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ZdravstveniPregledId"));

                    b.Property<int>("ClanId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("Datum")
                        .HasColumnType("date");

                    b.Property<string>("Opombe")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("VeljavnoDo")
                        .HasColumnType("date");

                    b.HasKey("ZdravstveniPregledId");

                    b.HasIndex("ClanId");

                    b.ToTable("ZdravstveniPregled");
                });

            modelBuilder.Entity("Vulkan2Blazor.Models.Clanstvo", b =>
                {
                    b.Property<int>("ClanstvoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClanstvoId"));

                    b.Property<int>("ClanId")
                        .HasColumnType("integer");

                    b.Property<DateOnly?>("DoDatum")
                        .HasColumnType("date");

                    b.Property<int>("GasilskoDrustvoId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("OdDatum")
                        .HasColumnType("date");

                    b.HasKey("ClanstvoId");

                    b.HasIndex("ClanId");

                    b.HasIndex("GasilskoDrustvoId");

                    b.ToTable("Clanstvo");
                });

            modelBuilder.Entity("Vulkan2Blazor.Models.GasilskaZveza", b =>
                {
                    b.Property<int>("GasilskaZvezaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GasilskaZvezaId"));

                    b.Property<string>("DavcnaStevilka")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Kraj")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MaticnaStevilka")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Posta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SpletnaStran")
                        .HasColumnType("text");

                    b.Property<string>("Telefon")
                        .HasColumnType("text");

                    b.HasKey("GasilskaZvezaId");

                    b.ToTable("GasilskaZveza");
                });

            modelBuilder.Entity("Vulkan2Blazor.Models.GasilskoDrustvo", b =>
                {
                    b.Property<int>("GasilskoDrustvoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GasilskoDrustvoId"));

                    b.Property<string>("DavcnaStevilka")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("GasilskaZvezaId")
                        .HasColumnType("integer");

                    b.Property<string>("Kraj")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MaticnaStevilka")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Posta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SpletnaStran")
                        .HasColumnType("text");

                    b.Property<string>("Telefon")
                        .HasColumnType("text");

                    b.Property<int>("TipDrustva")
                        .HasColumnType("integer");

                    b.HasKey("GasilskoDrustvoId");

                    b.HasIndex("GasilskaZvezaId");

                    b.ToTable("GasilskoDrustvo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Vulkan2Blazor.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Vulkan2Blazor.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vulkan2Blazor.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Vulkan2Blazor.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Vulkan2Blazor.Data.ApplicationUser", b =>
                {
                    b.HasOne("Vulkan2Blazor.Models.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanId");

                    b.Navigation("Clan");
                });

            modelBuilder.Entity("Vulkan2Blazor.Models.Cin", b =>
                {
                    b.HasOne("Vulkan2Blazor.Models.Clan", "Clan")
                        .WithMany("Cini")
                        .HasForeignKey("ClanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clan");
                });

            modelBuilder.Entity("Vulkan2Blazor.Models.Clan", b =>
                {
                    b.HasOne("Vulkan2Blazor.Models.GasilskoDrustvo", "GasilskoDrustvo")
                        .WithMany()
                        .HasForeignKey("GasilskoDrustvoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GasilskoDrustvo");
                });

            modelBuilder.Entity("Vulkan2Blazor.Models.ClanAttributes.Delo", b =>
                {
                    b.HasOne("Vulkan2Blazor.Models.Clan", "Clan")
                        .WithMany("OpravljenoDelo")
                        .HasForeignKey("ClanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clan");
                });

            modelBuilder.Entity("Vulkan2Blazor.Models.ClanAttributes.ZdravstveniPregled", b =>
                {
                    b.HasOne("Vulkan2Blazor.Models.Clan", "Clan")
                        .WithMany("ZdravstveniPregledi")
                        .HasForeignKey("ClanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clan");
                });

            modelBuilder.Entity("Vulkan2Blazor.Models.Clanstvo", b =>
                {
                    b.HasOne("Vulkan2Blazor.Models.Clan", "Clan")
                        .WithMany("Clanstva")
                        .HasForeignKey("ClanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vulkan2Blazor.Models.GasilskoDrustvo", "GasilskoDrustvo")
                        .WithMany()
                        .HasForeignKey("GasilskoDrustvoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clan");

                    b.Navigation("GasilskoDrustvo");
                });

            modelBuilder.Entity("Vulkan2Blazor.Models.GasilskoDrustvo", b =>
                {
                    b.HasOne("Vulkan2Blazor.Models.GasilskaZveza", "GasilskaZveza")
                        .WithMany("GasilskaDrustva")
                        .HasForeignKey("GasilskaZvezaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GasilskaZveza");
                });

            modelBuilder.Entity("Vulkan2Blazor.Models.Clan", b =>
                {
                    b.Navigation("Cini");

                    b.Navigation("Clanstva");

                    b.Navigation("OpravljenoDelo");

                    b.Navigation("ZdravstveniPregledi");
                });

            modelBuilder.Entity("Vulkan2Blazor.Models.GasilskaZveza", b =>
                {
                    b.Navigation("GasilskaDrustva");
                });
#pragma warning restore 612, 618
        }
    }
}
